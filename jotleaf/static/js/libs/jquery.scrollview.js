// Generated by CoffeeScript 1.4.0
var DraggableSurface,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

DraggableSurface = (function() {

  function DraggableSurface(container, scrollBy) {
    this.container = container;
    this.scrollBy = scrollBy;
    this.unbindEvents = __bind(this.unbindEvents, this);

    this.destroy = __bind(this.destroy, this);

    this.disable = __bind(this.disable, this);

    this.enable = __bind(this.enable, this);

    this.bindEvents = __bind(this.bindEvents, this);

    this.stopgrab = __bind(this.stopgrab, this);

    this.startgrab = __bind(this.startgrab, this);

    this.container = $(this.container);
    this.active = true;
    this._isGrabbing = false;
    this._xp = this._yp = this._grabbedNode = null;
    this.bindEvents();
  }

  DraggableSurface.prototype.dragClass = 'scrollview-dragging';

  DraggableSurface.prototype.startgrab = function(target) {
    this._isGrabbing = true;
    this._grabbedNode = target;
    this.container.addClass(this.dragClass);
    return this.container.trigger('start-drag');
  };

  DraggableSurface.prototype.stopgrab = function() {
    this._isGrabbing = false;
    this.container.removeClass(this.dragClass);
    this.container.trigger('stop-drag');
    return this._grabbedNode = null;
  };

  DraggableSurface.prototype.bindEvents = function() {
    var _this = this;
    this.container.mousedown(function(e) {
      _this._pixelsMoved = 0;
      if (!(_this.active && (e.which === 1 || e.which === 3))) {
        return;
      }
      e.preventDefault();
      if (e.which === 1) {
        _this.startgrab(e.target);
        _this._xp = e.pageX;
        return _this._yp = e.pageY;
      }
    });
    this.container.mousemove(function(e) {
      var xDiff, yDiff;
      if (!_this._isGrabbing) {
        return true;
      }
      xDiff = _this._xp - e.pageX;
      yDiff = _this._yp - e.pageY;
      _this.scrollBy(xDiff, yDiff);
      _this._xp = e.pageX;
      _this._yp = e.pageY;
      return _this._pixelsMoved += Math.abs(xDiff) + Math.abs(yDiff);
    });
    this.container.on('mouseup mouseleave', this.stopgrab);
    $(window).on('blur', this.stopgrab);
    return this.container.click(function(e) {
      if (_this._pixelsMoved > 5) {
        e.preventDefault();
        return e.stopPropagation();
      }
    });
  };

  DraggableSurface.prototype.enable = function() {
    return this.active = true;
  };

  DraggableSurface.prototype.disable = function() {
    this.active = false;
    return this.stopgrab();
  };

  DraggableSurface.prototype.destroy = function() {
    return this.unbindEvents();
  };

  DraggableSurface.prototype.unbindEvents = function() {
    this.container.off('mousedown mousemove click mouseup mouseleave');
    return $(window).off('blur', this.stopgrab);
  };

  return DraggableSurface;

})();
